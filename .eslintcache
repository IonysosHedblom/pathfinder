[{"/Users/ion/Desktop/pathfinder/src/components/Menu.jsx":"1","/Users/ion/Desktop/pathfinder/src/components/Board.jsx":"2","/Users/ion/Desktop/pathfinder/src/algorithms/dijkstra.js":"3","/Users/ion/Desktop/pathfinder/src/App.js":"4","/Users/ion/Desktop/pathfinder/src/components/Node.jsx":"5","/Users/ion/Desktop/pathfinder/src/index.js":"6","/Users/ion/Desktop/pathfinder/src/algorithms/recursiveDivison.js":"7"},{"size":4282,"mtime":1609860302680,"results":"8","hashOfConfig":"9"},{"size":20500,"mtime":1609867242400,"results":"10","hashOfConfig":"9"},{"size":2008,"mtime":1609746346635,"results":"11","hashOfConfig":"9"},{"size":215,"mtime":1609801704184,"results":"12","hashOfConfig":"9"},{"size":741,"mtime":1609603487694,"results":"13","hashOfConfig":"9"},{"size":199,"mtime":1609006971804,"results":"14","hashOfConfig":"9"},{"size":2427,"mtime":1609867261573,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"mu6geb",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ion/Desktop/pathfinder/src/components/Menu.jsx",["32","33"],"import React, { useState, useRef, useEffect, useCallback } from 'react';\n\nimport '../assets/styles/Menu.css';\n\nconst Menu = ({\n  algorithm,\n  setAlgorithm,\n  disable,\n  setDisable,\n  startVisualize,\n  algorithmSpeed,\n  setAlgorithmSpeed,\n  speedValue,\n  setSpeedValue,\n  clearWalls,\n}) => {\n  const [showAlgos, setShowAlgos] = useState(false);\n  const [showMazes, setShowMazes] = useState(false);\n  const [showSpeedMenu, setShowSpeedMenu] = useState(false);\n  const algoDropdown = useRef(null);\n  const mazeDropdown = useRef(null);\n  const speedDropdown = useRef(null);\n\n  const toggleAlgoDropdown = () => {\n    setShowAlgos(!showAlgos);\n    setShowMazes(false);\n    setShowSpeedMenu(false);\n  };\n\n  const toggleMazeDropdown = () => {\n    setShowMazes(!showMazes);\n    setShowAlgos(false);\n    setShowSpeedMenu(false);\n  };\n\n  const toggleSpeedDropdown = () => {\n    setShowSpeedMenu(!showSpeedMenu);\n    setShowMazes(false);\n    setShowAlgos(false);\n  };\n  const closeDropdowns = useCallback(\n    e => {\n      if (!algoDropdown.current.contains(e.target)) {\n        setShowAlgos(false);\n      }\n      if (!mazeDropdown.current.contains(e.target)) {\n        setShowMazes(false);\n      }\n      if (!speedDropdown.current.contains(e.target)) {\n        setShowSpeedMenu(false);\n      }\n    },\n    [algoDropdown.current, mazeDropdown.current, speedDropdown.current]\n  );\n\n  useEffect(() => {\n    document.addEventListener('click', closeDropdowns);\n\n    return () => {\n      document.removeEventListener('click', closeDropdowns);\n    };\n  }, []);\n\n  const changeAlgorithm = e => {\n    if (e.target.innerText === \"Dijkstra's Algorithm\") {\n      setAlgorithm('dijkstra');\n    } else if (e.target.innerText === 'A* Search') {\n      setAlgorithm('astar');\n    } else if (e.target.innerText === 'Breadth-first Search') {\n      setAlgorithm('bfs');\n    }\n  };\n\n  const setSpeed = e => {\n    if (e.target.innerText === 'Normal') {\n      setAlgorithmSpeed('Normal');\n      setSpeedValue(25);\n    } else if (e.target.innerText === 'Fast (default)') {\n      setAlgorithmSpeed('Fast');\n      setSpeedValue(10);\n    } else if (e.target.innerText === 'Slow') {\n      setAlgorithmSpeed('Slow');\n      setSpeedValue(100);\n    }\n  };\n\n  return (\n    <div className='menu'>\n      <h1>Pathfinding Algorithm Visualizer</h1>\n      <nav>\n        <ul className='menu-list'>\n          <li ref={algoDropdown} onClick={() => toggleAlgoDropdown()}>\n            Algorithms<span className='dropdown-arrow'></span>\n            <ul className={showAlgos === true ? 'algo-dropdown' : 'hidden'}>\n              <li onClick={e => changeAlgorithm(e)}>Dijkstra's Algorithm</li>\n              <li onClick={e => changeAlgorithm(e)}>A* Search</li>\n              <li onClick={e => changeAlgorithm(e)}>Breadth-first Search</li>\n            </ul>\n          </li>\n\n          <li ref={mazeDropdown} onClick={() => toggleMazeDropdown()}>\n            Build Maze<span className='dropdown-arrow'></span>\n            <ul className={showMazes === true ? 'maze-dropdown' : 'hidden'}>\n              <li>Recursive Division</li>\n              <li>Random maze pattern</li>\n              <li>Stair pattern</li>\n            </ul>\n          </li>\n          <li ref={speedDropdown} onClick={() => toggleSpeedDropdown()}>\n            Speed: {algorithmSpeed}\n            <span className='dropdown-arrow'></span>\n            <ul\n              className={showSpeedMenu === true ? 'speed-dropdown' : 'hidden'}\n            >\n              <li onClick={e => setSpeed(e)}>Slow</li>\n              <li onClick={e => setSpeed(e)}>Normal</li>\n              <li onClick={e => setSpeed(e)}>Fast (default)</li>\n            </ul>\n          </li>\n          <li>\n            <button\n              onClick={() => startVisualize()}\n              className={disable ? 'disabled' : ''}\n            >\n              Start{' '}\n              {algorithm === 'dijkstra'\n                ? \"Dijkstra's\"\n                : algorithm === 'astar'\n                ? 'A*'\n                : algorithm === 'bfs'\n                ? 'BFS'\n                : ''}\n            </button>\n          </li>\n          <li onClick={() => clearWalls()}>Clear walls</li>\n          <li>Reset board</li>\n\n          <li>Tutorial</li>\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default Menu;\n","/Users/ion/Desktop/pathfinder/src/components/Board.jsx",[],"/Users/ion/Desktop/pathfinder/src/algorithms/dijkstra.js",[],"/Users/ion/Desktop/pathfinder/src/App.js",[],"/Users/ion/Desktop/pathfinder/src/components/Node.jsx",["34"],"import React from 'react';\n\nimport styles from '../assets/styles/Node.css';\n\nconst Node = props => {\n  const {\n    row,\n    column,\n    status,\n    onMouseDown,\n    onMouseEnter,\n    onMouseUp,\n    shortest,\n  } = props;\n\n  const typeOfNode =\n    status === 'start'\n      ? 'start'\n      : status === 'target'\n      ? 'target'\n      : status === 'wall'\n      ? 'wall'\n      : '';\n\n  const shortestClass = shortest ? 'node-shortest-path' : '';\n\n  return (\n    <td\n      onMouseDown={() => onMouseDown(row, column)}\n      onMouseEnter={() => onMouseEnter(row, column)}\n      onMouseUp={() => onMouseUp(row, column)}\n      className={`node ${typeOfNode} ${shortestClass}`}\n      id={`${row}-${column}`}\n    ></td>\n  );\n};\n\nexport default Node;\n","/Users/ion/Desktop/pathfinder/src/index.js",[],"/Users/ion/Desktop/pathfinder/src/algorithms/recursiveDivison.js",[],{"ruleId":"35","severity":1,"message":"36","line":53,"column":5,"nodeType":"37","endLine":53,"endColumn":72,"suggestions":"38"},{"ruleId":"35","severity":1,"message":"39","line":62,"column":6,"nodeType":"37","endLine":62,"endColumn":8,"suggestions":"40"},{"ruleId":"41","severity":1,"message":"42","line":3,"column":8,"nodeType":"43","messageId":"44","endLine":3,"endColumn":14},"react-hooks/exhaustive-deps","React Hook useCallback has unnecessary dependencies: 'algoDropdown.current', 'mazeDropdown.current', and 'speedDropdown.current'. Either exclude them or remove the dependency array. Mutable values like 'algoDropdown.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["45"],"React Hook useEffect has a missing dependency: 'closeDropdowns'. Either include it or remove the dependency array.",["46"],"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar",{"desc":"47","fix":"48"},{"desc":"49","fix":"50"},"Update the dependencies array to be: []",{"range":"51","text":"52"},"Update the dependencies array to be: [closeDropdowns]",{"range":"53","text":"54"},[1294,1361],"[]",[1537,1539],"[closeDropdowns]"]